# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

stages:
- stage: Test
  displayName: Test stage
  jobs:
  - job: TestandPublishReport
    displayName: Test with JUnit
    strategy:
     matrix:
      linux:
       imageName: 'ubuntu-latest'
      windows:
       imageName: 'windows-latest'
    pool:
      vmImage: $(imageName)
    steps:
      - task: Gradle@2
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          findBugsRunAnalysis: true
          tasks: 'build'

- stage: Copy_and_Publish
  displayName: copy and publish stage
  jobs:
  - job: CopyAndPublishFiles
    displayName: copy and publish files
    steps:
    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.jar'
        TargetFolder: $(Build.ArtifactStagingDirectory)
    - task: PublishPipelineArtifact@1
      displayName: 'Publish the artifacts'
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifactType: 'pipeline'
        artifactName: 'Gradle'
          




